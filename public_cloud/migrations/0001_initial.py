# Generated by Django 2.1.7 on 2019-03-03 10:50

import datetime

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_id', models.IntegerField(verbose_name='云厂商id')),
                ('family_id', models.IntegerField(verbose_name='家族id')),
                ('access_key', models.CharField(max_length=100, null=True, verbose_name='accessKey')),
                ('secret_key', models.CharField(max_length=100, null=True, verbose_name='secretKey')),
                ('account_status', models.IntegerField(default=0, verbose_name='账户状态')),
                ('app_id', models.CharField(max_length=100, null=True, verbose_name='appid')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='账户录入日期')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '账户信息表',
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='BillInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(verbose_name='账户ID')),
                ('source_type', models.CharField(max_length=100, null=True, verbose_name='资源类型')),
                ('source_id', models.CharField(max_length=200, null=True, verbose_name='资源id')),
                ('source_name', models.CharField(max_length=200, null=True, verbose_name='资源名称')),
                ('charge_type', models.CharField(max_length=100, null=True, verbose_name='计费类型')),
                ('start_time', models.DateTimeField(null=True, verbose_name='开始日期')),
                ('end_time', models.DateTimeField(null=True, verbose_name='结束日期')),
                ('price', models.CharField(max_length=100, null=True, verbose_name='消费总金额')),
                ('bandwidth_price', models.CharField(max_length=100, null=True, verbose_name='带宽消费')),
                ('disk_price', models.CharField(max_length=100, null=True, verbose_name='磁盘消费')),
                ('snapshot_price', models.CharField(max_length=100, null=True, verbose_name='快照消费')),
                ('storage_type', models.CharField(max_length=50, null=True, verbose_name='存储类型')),
                ('storage_flow_price', models.CharField(max_length=100, null=True, verbose_name='存储流量消费')),
                ('storage_request_price', models.CharField(max_length=100, null=True, verbose_name='存储请求消费')),
                ('storage_price', models.CharField(max_length=100, null=True, verbose_name='存储消费')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '账单表',
                'db_table': 'bill_info',
            },
        ),
        migrations.CreateModel(
            name='DiskInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(verbose_name='账户ID')),
                ('disk_id', models.IntegerField(null=True, verbose_name='磁盘id')),
                ('policy_id', models.IntegerField(null=True, verbose_name='策略id')),
                ('region_id', models.IntegerField(null=True, verbose_name='地区id')),
                ('disk_type', models.IntegerField(choices=[(0, '系统盘'), (1, '数据盘')], null=True, verbose_name='磁盘类型')),
                ('instance_id', models.IntegerField(null=True, verbose_name='对应的实例表id')),
                ('disk_name', models.CharField(max_length=200, null=True, verbose_name='磁盘名')),
                ('disk_category', models.IntegerField(choices=[(0, '普通云盘'), (1, '高效云盘'), (2, 'SSD云盘'), (3, '本地SSD'), (4, '本地磁盘')], default=0, verbose_name='磁盘类型')),
                ('encrypted', models.BooleanField(default=False, verbose_name='是否加密')),
                ('disk_size', models.CharField(max_length=500, null=True, verbose_name='磁盘大小')),
                ('disk_status', models.IntegerField(choices=[(0, '使用中'), (1, '可用'), (2, '正在附加'), (3, '正在拆卸'), (4, '正在创建'), (5, '重新初始化')], default=0, null=True, verbose_name='磁盘状态')),
                ('disk_charge_type', models.IntegerField(choices=[(0, '包年包月'), (1, '按量付费')], default=0, null=True, verbose_name='付费类型')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '磁盘表',
                'db_table': 'disk_info',
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.CharField(max_length=100, verbose_name='用户邮箱')),
                ('family_name', models.CharField(max_length=100, verbose_name='家族名')),
            ],
            options={
                'verbose_name': '用户家族表',
                'db_table': 'family',
            },
        ),
        migrations.CreateModel(
            name='FirmInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_key', models.IntegerField(verbose_name='云厂商代码')),
                ('us_name', models.CharField(max_length=100, unique=True, verbose_name='英文名')),
                ('zh_name', models.CharField(max_length=200, verbose_name='中文名')),
            ],
            options={
                'verbose_name': '云厂商信息表',
                'db_table': 'firm',
            },
        ),
        migrations.CreateModel(
            name='HostInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_id', models.IntegerField(verbose_name='家族id')),
                ('instance_id', models.CharField(max_length=100, verbose_name='实例id')),
                ('instance_name', models.CharField(max_length=100, verbose_name='实例名称')),
                ('instance_des', models.CharField(max_length=200, verbose_name='实例描述')),
                ('instance_type', models.IntegerField(choices=[(0, 'linux'), (1, 'windows')], default=0, verbose_name='系统类型')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除')),
                ('instance_status', models.IntegerField(choices=[(0, '正常'), (1, '关闭'), (2, '重启中'), (2, '关机中')], default=0, verbose_name='实例运行状态')),
                ('instance_pub_ip', models.CharField(max_length=100, null=True, verbose_name='公网ip')),
                ('instance_pri_ip', models.CharField(max_length=100, null=True, verbose_name='内网ip')),
                ('policy_id', models.IntegerField(null=True, verbose_name='策略id')),
                ('region_id', models.IntegerField(null=True, verbose_name='地区id')),
                ('start_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('end_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='到期时间')),
                ('last_buy_time', models.DateTimeField(null=True, verbose_name='上次续费时间')),
                ('is_overdue', models.IntegerField(choices=[(0, '使用中'), (1, '已过期'), (2, '锁定')], default=0, verbose_name='使用状态')),
            ],
            options={
                'verbose_name': '主机资源信息',
                'db_table': 'host_info',
            },
        ),
        migrations.CreateModel(
            name='PolicyHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(verbose_name='账户ID')),
                ('policy_id', models.IntegerField(null=True, verbose_name='策略id')),
                ('instance_id', models.IntegerField(null=True, verbose_name='对应的实例id')),
                ('disk_id', models.IntegerField(null=True, verbose_name='关联的磁盘')),
                ('exec_status', models.IntegerField(choices=[(0, '成功'), (1, '失败')], default=0, verbose_name='执行状态')),
                ('operation', models.IntegerField(choices=[(0, '撤销'), (1, '应用'), (2, '删除')], null=True, verbose_name='执行的操作')),
                ('describe', models.CharField(max_length=300, null=True, verbose_name='信息描述')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '策略历史记录表',
                'db_table': 'policy_history',
            },
        ),
        migrations.CreateModel(
            name='RegionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_id', models.IntegerField(verbose_name='云厂商id')),
                ('region_type', models.IntegerField(null=True, verbose_name='地区类型')),
                ('region_id', models.IntegerField(verbose_name='地区id')),
                ('region_name', models.CharField(max_length=100, verbose_name='汉语名称')),
                ('end_point', models.CharField(max_length=200, verbose_name='域名')),
                ('region_status', models.IntegerField(choices=[(0, '不可用'), (1, '可用')], default=1, verbose_name='可用状态')),
            ],
            options={
                'verbose_name': '可用地区',
                'db_table': 'region_info',
            },
        ),
        migrations.CreateModel(
            name='SnapshotHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(verbose_name='账户ID')),
                ('snapshot_id', models.IntegerField(null=True, verbose_name='关联快照')),
                ('disk_id', models.IntegerField(null=True, verbose_name='关联的磁盘')),
                ('exec_status', models.IntegerField(choices=[(0, '成功'), (1, '失败')], default=0, verbose_name='执行状态')),
                ('instance_id', models.IntegerField(null=True, verbose_name='关联的实例')),
                ('operation', models.IntegerField(choices=[(0, '创建'), (1, '回滚'), (2, '删除')], null=True, verbose_name='执行的操作')),
                ('describe', models.CharField(max_length=300, null=True, verbose_name='信息描述')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '快照历史记录表',
                'db_table': 'snapshot_history',
            },
        ),
        migrations.CreateModel(
            name='SnapshotInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(verbose_name='账户id')),
                ('region_id', models.IntegerField(null=True, verbose_name='地区id')),
                ('instance_id', models.IntegerField(null=True, verbose_name='实例表id')),
                ('disk_id', models.IntegerField(null=True, verbose_name='关联的磁盘')),
                ('available_status', models.IntegerField(choices=[(0, '可用'), (1, '不可用')], default=0, verbose_name='可用状态')),
                ('snapshot_id', models.CharField(max_length=200, null=True, verbose_name='快照id')),
                ('snapshot_name', models.CharField(max_length=200, null=True, verbose_name='快照名')),
                ('snapshot_type', models.IntegerField(choices=[(0, '自动创建'), (1, '手动创建')], default=0, verbose_name='快照类型')),
                ('snapshot_progress', models.CharField(max_length=100, null=True, verbose_name='快照创建进度%')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除')),
                ('retention_days', models.IntegerField(null=True, verbose_name='自动快照保存天数')),
                ('snapshot_status', models.IntegerField(default=0, verbose_name='快照状态')),
                ('source_disk_size', models.CharField(max_length=100, null=True, verbose_name='源磁盘容量G')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('snapshot_create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='快照创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '快照表',
                'db_table': 'snapshot_info',
            },
        ),
        migrations.CreateModel(
            name='SnapshotPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(verbose_name='账户id')),
                ('region_id', models.IntegerField(null=True, verbose_name='地区id')),
                ('policy_name', models.CharField(max_length=100, null=True, verbose_name='策略名称')),
                ('time_point', models.CharField(max_length=200, null=True, verbose_name='时间点')),
                ('week', models.CharField(max_length=100, null=True, verbose_name='快照重复日期')),
                ('retention_days', models.IntegerField(null=True, verbose_name='自动快照保存天数')),
                ('disk_num', models.IntegerField(null=True, verbose_name='启用该策略的磁盘数量')),
                ('status', models.IntegerField(choices=[(0, '可用'), (1, '创建')], default=0, verbose_name='策略状态')),
                ('policy_create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='策略创建时间')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '快照策略表',
                'db_table': 'snapshot_policy',
            },
        ),
        migrations.CreateModel(
            name='StorageInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(verbose_name='账户ID')),
                ('region_id', models.IntegerField(null=True, verbose_name='地区id')),
                ('name', models.CharField(max_length=100, verbose_name='存储名')),
                ('request_num', models.IntegerField(verbose_name='总请求次数')),
                ('cdn', models.CharField(max_length=100, null=True, verbose_name='CDN回源流量')),
                ('pub_net', models.CharField(max_length=100, null=True, verbose_name='外网访问流量')),
                ('storage_size', models.CharField(max_length=1000, verbose_name='存储使用量')),
                ('storage_type', models.CharField(max_length=100, null=True, verbose_name='存储类型')),
                ('obj_num', models.CharField(max_length=100, null=True, verbose_name='文件数量 ')),
                ('obj_list', models.TextField(null=True, verbose_name='文件列表')),
                ('one_date', models.DateTimeField(null=True, verbose_name='每一天日期')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '云存储表',
                'db_table': 'storage_info',
            },
        ),
    ]
